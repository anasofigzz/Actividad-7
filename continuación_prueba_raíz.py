# -*- coding: utf-8 -*-
"""Continuación Prueba Raíz

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MR7MNU3JcrNJ6G5A0bfAfZhqddQXe5Sj
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import statsmodels.api as sm
from statsmodels.tsa.stattools import adfuller, coint
from statsmodels.graphics.tsaplots import plot_acf, plot_pacf

# Function to perform Augmented Dickey-Fuller test
def adf_test(series, title=''):
    print(f'Augmented Dickey-Fuller Test: {title}')
    result = adfuller(series.dropna(), autolag='AIC')
    labels = ['ADF Test Statistic', 'p-value', '# Lags Used', 'Number of Observations Used']
    out = pd.Series(result[0:4], index=labels)
    for key, value in result[4].items():
        out[f'Critical Value ({key})'] = value
    print(out.to_string())
    if result[1] <= 0.05:
        print("Strong evidence against the null hypothesis, reject the null hypothesis. Data has no unit root and is stationary")
    else:
        print("Weak evidence against the null hypothesis, fail to reject the null hypothesis. Data has a unit root and is non-stationary")
    print('\n')

# Function to calculate moving averages
def moving_average(data, window):
    return data.rolling(window=window).mean()

# Function to test for cointegration
def cointegration_test(series1, series2, ticker1, ticker2):
    print(f'Cointegration Test between {ticker1} and {ticker2}')
    score, p_value, _ = coint(series1.dropna(), series2.dropna())
    print(f'Cointegration Test Statistic: {score}')
    print(f'p-value: {p_value}')
    if p_value < 0.05:
        print("Strong evidence of cointegration (reject null hypothesis of no cointegration)")
    else:
        print("Weak evidence of cointegration (fail to reject null hypothesis)")
    print('\n')

# Simulated uploaded data (directly using provided Excel content)
stock_datasets = {
    'Netflix': pd.DataFrame({
        'Date': pd.to_datetime([
            '2024-09-03', '2024-09-04', '2024-09-05', '2024-09-06', '2024-09-09', '2024-09-10', '2024-09-11', '2024-09-12',
            '2024-09-13', '2024-09-16', '2024-09-17', '2024-09-18', '2024-09-19', '2024-09-20', '2024-09-23', '2024-09-24',
            '2024-09-25', '2024-09-26', '2024-09-27', '2024-09-30', '2024-10-01', '2024-10-02', '2024-10-03', '2024-10-04',
            '2024-10-07', '2024-10-08', '2024-10-09', '2024-10-10', '2024-10-11', '2024-10-14', '2024-10-15', '2024-10-16',
            '2024-10-17', '2024-10-18', '2024-10-21', '2024-10-22', '2024-10-23', '2024-10-24', '2024-10-25', '2024-10-28',
            '2024-10-29', '2024-10-30', '2024-10-31', '2024-11-01', '2024-11-04', '2024-11-05', '2024-11-06', '2024-11-07',
            '2024-11-08', '2024-11-11', '2024-11-12', '2024-11-13', '2024-11-14', '2024-11-15', '2024-11-18', '2024-11-19',
            '2024-11-20', '2024-11-21', '2024-11-22', '2024-11-25', '2024-11-26', '2024-11-27', '2024-11-29', '2024-12-02',
            '2024-12-03', '2024-12-04', '2024-12-05', '2024-12-06', '2024-12-09', '2024-12-10', '2024-12-11', '2024-12-12',
            '2024-12-13', '2024-12-16', '2024-12-17', '2024-12-18', '2024-12-19', '2024-12-20', '2024-12-23', '2024-12-24',
            '2024-12-26', '2024-12-27', '2024-12-30', '2024-12-31', '2025-01-02', '2025-01-03', '2025-01-06', '2025-01-07',
            '2025-01-08', '2025-01-10', '2025-01-13', '2025-01-14', '2025-01-15', '2025-01-16', '2025-01-17', '2025-01-21',
            '2025-01-22', '2025-01-23', '2025-01-24', '2025-01-27', '2025-01-28', '2025-01-29', '2025-01-30', '2025-01-31',
            '2025-02-03', '2025-02-04', '2025-02-05', '2025-02-06', '2025-02-07', '2025-02-10', '2025-02-11', '2025-02-12',
            '2025-02-13', '2025-02-14', '2025-02-18', '2025-02-19', '2025-02-20', '2025-02-21', '2025-02-24', '2025-02-25',
            '2025-02-26', '2025-02-27', '2025-02-28', '2025-03-03', '2025-03-04', '2025-03-05', '2025-03-06', '2025-03-07',
            '2025-03-10', '2025-03-11', '2025-03-12', '2025-03-13', '2025-03-14', '2025-03-17', '2025-03-18', '2025-03-19',
            '2025-03-20', '2025-03-21', '2025-03-24', '2025-03-25', '2025-03-26', '2025-03-27', '2025-03-28', '2025-03-31',
            '2025-04-01', '2025-04-02', '2025-04-03', '2025-04-04', '2025-04-07', '2025-04-08', '2025-04-09', '2025-04-10',
            '2025-04-11', '2025-04-14', '2025-04-15', '2025-04-16', '2025-04-17', '2025-04-21', '2025-04-22', '2025-04-23',
            '2025-04-24', '2025-04-25', '2025-04-28', '2025-04-29', '2025-04-30', '2025-05-01', '2025-05-02', '2025-05-05',
            '2025-05-06', '2025-05-07', '2025-05-08', '2025-05-09', '2025-05-12', '2025-05-13', '2025-05-14', '2025-05-15',
            '2025-05-16', '2025-05-19', '2025-05-20', '2025-05-21', '2025-05-22', '2025-05-23', '2025-05-27', '2025-05-28',
            '2025-05-29', '2025-05-30', '2025-06-02', '2025-06-03', '2025-06-04', '2025-06-05'
        ]),
        'Close': [
            675.32, 679.68, 683.62, 665.77, 675.42, 673.62, 681.47, 686.8, 697.06, 696.5, 706.91, 690.47, 704.32, 701.03,
            705.37, 722.26, 721.56, 711.43, 707.35, 709.27, 706.13, 711.09, 706.8, 719.7, 701.92, 721.76, 727.43, 730.29,
            722.79, 713, 705.98, 702, 687.65, 763.89, 772.07, 764.24, 749.29, 754.55, 754.68, 749.12, 759.44, 753.74,
            756.03, 756.1, 755.51, 763.91, 780.21, 796.54, 795.04, 805.44, 819.5, 830.47, 837.26, 823.96, 847.05, 871.32,
            883.85, 897.48, 897.79, 865.59, 872.6, 877.34, 886.81, 897.74, 902.17, 911.06, 917.87, 934.74, 913.69, 913.35,
            936.56, 925.55, 918.87, 921.08, 919.13, 889.55, 902.04, 909.05, 911.45, 932.12, 924.14, 907.55, 900.43, 891.32,
            886.73, 881.05, 881.79, 879.19, 875, 837.69, 840.29, 828.4, 848.26, 842.37, 858.1, 869.68, 953.99, 984.86,
            977.59, 971.89, 971.83, 978.15, 973.24, 976.76, 978.94, 994.87, 1011.11, 1015.68, 1013.93, 1027.6, 1008.08,
            1027.31, 1043.69, 105058.6, 1035.85, 1043.33, 1024.54, 1003.15, 988.47, 977.24, 990.06, 963.07, 980.56, 973.7,
            972.58, 990.92, 906.36, 891.11, 866.68, 895.1, 919.68, 890.17, 918, 950.02, 929.98, 959.49, 950.84, 960.29,
            971.99, 997.28, 970.65, 976.72, 933.85, 932.53, 928.38, 935.52, 917.05, 855.86, 867.83, 870.4, 945.47, 921.17,
            918.29, 931.28, 976.28, 961.63, 973.03, 987.91, 1040.34, 1049.59, 1096.87, 1101.53, 1110.38, 1125.64, 1131.72,
            1133.47, 1156.49, 1134.06, 1137.69, 1155.41, 1144.43, 1140.22, 1110, 1138.44, 1150.99, 1177.98, 1191.53, 1191.64,
            1192.02, 1194.63, 1187.97, 1185.39, 1211.57, 1208.55, 1184.86, 1207.23, 1218.98, 1217.94, 1239.66, 1250.52
        ]
    }),
    'LLY': pd.DataFrame({
        'Date': pd.to_datetime([
            '2024-09-03', '2024-09-04', '2024-09-05', '2024-09-06', '2024-09-09', '2024-09-10', '2024-09-11', '2024-09-12',
            '2024-09-13', '2024-09-16', '2024-09-17', '2024-09-18', '2024-09-19', '2024-09-20', '2024-09-23', '2024-09-24',
            '2024-09-25', '2024-09-26', '2024-09-27', '2024-09-30', '2024-10-01', '2024-10-02', '2024-10-03', '2024-10-04',
            '2024-10-07', '2024-10-08', '2024-10-09', '2024-10-10', '2024-10-11', '2024-10-14', '2024-10-15', '2024-10-16',
            '2024-10-17', '2024-10-18', '2024-10-21', '2024-10-22', '2024-10-23', '2024-10-24', '2024-10-25', '2024-10-28',
            '2024-10-29', '2024-10-30', '2024-10-31', '2024-11-01', '2024-11-04', '2024-11-05', '2024-11-06', '2024-11-07',
            '2024-11-08', '2024-11-11', '2024-11-12', '2024-11-13', '2024-11-14', '2024-11-15', '2024-11-18', '2024-11-19',
            '2024-11-20', '2024-11-21', '2024-11-22', '2024-11-25', '2024-11-26', '2024-11-27', '2024-11-29', '2024-12-02',
            '2024-12-03', '2024-12-04', '2024-12-05', '2024-12-06', '2024-12-09', '2024-12-10', '2024-12-11', '2024-12-12',
            '2024-12-13', '2024-12-16', '2024-12-17', '2024-12-18', '2024-12-19', '2024-12-20', '2024-12-23', '2024-12-24',
            '2024-12-26', '2024-12-27', '2024-12-30', '2024-12-31', '2025-01-02', '2025-01-03', '2025-01-06', '2025-01-07',
            '2025-01-08', '2025-01-10', '2025-01-13', '2025-01-14', '2025-01-15', '2025-01-16', '2025-01-17', '2025-01-21',
            '2025-01-22', '2025-01-23', '2025-01-24', '2025-01-27', '2025-01-28', '2025-01-29', '2025-01-30', '2025-01-31',
            '2025-02-03', '2025-02-04', '2025-02-05', '2025-02-06', '2025-02-07', '2025-02-10', '2025-02-11', '2025-02-12',
            '2025-02-13', '2025-02-14', '2025-02-18', '2025-02-19', '2025-02-20', '2025-02-21', '2025-02-24', '2025-02-25',
            '2025-02-26', '2025-02-27', '2025-02-28', '2025-03-03', '2025-03-04', '2025-03-05', '2025-03-06', '2025-03-07',
            '2025-03-10', '2025-03-11', '2025-03-12', '2025-03-13', '2025-03-14', '2025-03-17', '2025-03-18', '2025-03-19',
            '2025-03-20', '2025-03-21', '2025-03-24', '2025-03-25', '2025-03-26', '2025-03-27', '2025-03-28', '2025-03-31',
            '2025-04-01', '2025-04-02', '2025-04-03', '2025-04-04', '2025-04-07', '2025-04-08', '2025-04-09', '2025-04-10',
            '2025-04-11', '2025-04-14', '2025-04-15', '2025-04-16', '2025-04-17', '2025-04-21', '2025-04-22', '2025-04-23',
            '2025-04-24', '2025-04-25', '2025-04-28', '2025-04-29', '2025-04-30', '2025-05-01', '2025-05-02', '2025-05-05',
            '2025-05-06', '2025-05-07', '2025-05-08', '2025-05-09', '2025-05-12', '2025-05-13', '2025-05-14', '2025-05-15',
            '2025-05-16', '2025-05-19', '2025-05-20', '2025-05-21', '2025-05-22', '2025-05-23', '2025-05-27', '2025-05-28',
            '2025-05-29', '2025-05-30', '2025-06-02', '2025-06-03', '2025-06-04', '2025-06-05'
        ]),
        'Close': [
            956.53, 946.31, 912.75, 902.71, 908.27, 901.25, 920.89, 935.02, 923.71, 923.54, 906.18, 904.97, 915.04, 921.49,
            918.52, 924.43, 924.56, 909.32, 877.79, 885.94, 884.48, 891.07, 885.55, 887.16, 898.4, 913.72, 919.74, 910.69,
            932.06, 929.51, 913.32, 916.42, 917.12, 917.97, 906.13, 909.15, 903.25, 891.32, 892.7, 895.59, 903.58, 846.83,
            829.74, 818.93, 806.14, 806.06, 776.38, 797.45, 831.54, 832.44, 818.86, 811.81, 786.23, 746.2, 727.2, 729.73,
            753.41, 749.92, 748.01, 755, 789.32, 788.19, 795.35, 799.8, 813.33, 829.84, 825.62, 826.71, 803.58, 799.58,
            796.03, 782.35, 789.12, 779, 778.62, 764.71, 757.54, 767.76, 796.28, 795.67, 794.14, 783.17, 773.84, 772, 778.07,
            781.98, 765.1, 773.29, 787.22, 799.9, 797.48, 744.91, 746.74, 757.6, 725.72, 742.35, 753.98, 766.6, 785.41,
            808.17, 804.99, 804.08, 823.23, 811.08, 810.43, 826.07, 842.18, 870.37, 878.31, 868.88, 865, 872.97, 871.86,
            844.27, 857.2, 867.05, 873.12, 873.68, 881.4, 901.8, 915.01, 905.16, 920.63, 929.72, 911.06, 929.72, 912.76,
            869.58, 829.76, 824.06, 821.86, 801.65, 813.48, 824.76, 822.51, 837.01, 842.57, 837.57, 864.9, 852.35, 826.76,
            821.67, 822.51, 825.91, 805.23, 818.22, 789.09, 738.21, 723.73, 726.24, 753.71, 720.91, 732.41, 754.35, 757.18,
            734.9, 839.96, 818.02, 827.54, 829.42, 859.73, 884.54, 877.29, 885.2, 898.95, 794.1, 823.62, 821.46, 775.12,
            776.72, 751.45, 734.57, 755.57, 746.06, 715.56, 733.29, 757.39, 755.11, 747.01, 724.95, 715.2, 713.71, 725.22,
            719.39, 722.57, 737.67, 747.12, 750.78, 765.84, 765.68
        ]
    }),
    'Microsoft': pd.DataFrame({
        'Date': pd.to_datetime([
            '2024-09-03', '2024-09-04', '2024-09-05', '2024-09-06', '2024-09-09', '2024-09-10', '2024-09-11', '2024-09-12',
            '2024-09-13', '2024-09-16', '2024-09-17', '2024-09-18', '2024-09-19', '2024-09-20', '2024-09-23', '2024-09-24',
            '2024-09-25', '2024-09-26', '2024-09-27', '2024-09-30', '2024-10-01', '2024-10-02', '2024-10-03', '2024-10-04',
            '2024-10-07', '2024-10-08', '2024-10-09', '2024-10-10', '2024-10-11', '2024-10-14', '2024-10-15', '2024-10-16',
            '2024-10-17', '2024-10-18', '2024-10-21', '2024-10-22', '2024-10-23', '2024-10-24', '2024-10-25', '2024-10-28',
            '2024-10-29', '2024-10-30', '2024-10-31', '2024-11-01', '2024-11-04', '2024-11-05', '2024-11-06', '2024-11-07',
            '2024-11-08', '2024-11-11', '2024-11-12', '2024-11-13', '2024-11-14', '2024-11-15', '2024-11-18', '2024-11-19',
            '2024-11-20', '2024-11-21', '2024-11-22', '2024-11-25', '2024-11-26', '2024-11-27', '2024-11-29', '2024-12-02',
            '2024-12-03', '2024-12-04', '2024-12-05', '2024-12-06', '2024-12-09', '2024-12-10', '2024-12-11', '2024-12-12',
            '2024-12-13', '2024-12-16', '2024-12-17', '2024-12-18', '2024-12-19', '2024-12-20', '2024-12-23', '2024-12-24',
            '2024-12-26', '2024-12-27', '2024-12-30', '2024-12-31', '2025-01-02', '2025-01-03', '2025-01-06', '2025-01-07',
            '2025-01-08', '2025-01-10', '2025-01-13', '2025-01-14', '2025-01-15', '2025-01-16', '2025-01-17', '2025-01-21',
            '2025-01-22', '2025-01-23', '2025-01-24', '2025-01-27', '2025-01-28', '2025-01-29', '2025-01-30', '2025-01-31',
            '2025-02-03', '2025-02-04', '2025-02-05', '2025-02-06', '2025-02-07', '2025-02-10', '2025-02-11', '2025-02-12',
            '2025-02-13', '2025-02-14', '2025-02-18', '2025-02-19', '2025-02-20', '2025-02-21', '2025-02-24', '2025-02-25',
            '2025-02-26', '2025-02-27', '2025-02-28', '2025-03-03', '2025-03-04', '2025-03-05', '2025-03-06', '2025-03-07',
            '2025-03-10', '2025-03-11', '2025-03-12', '2025-03-13', '2025-03-14', '2025-03-17', '2025-03-18', '2025-03-19',
            '2025-03-20', '2025-03-21', '2025-03-24', '2025-03-25', '2025-03-26', '2025-03-27', '2025-03-28', '2025-03-31',
            '2025-04-01', '2025-04-02', '2025-04-03', '2025-04-04', '2025-04-07', '2025-04-08', '2025-04-09', '2025-04-10',
            '2025-04-11', '2025-04-14', '2025-04-15', '2025-04-16', '2025-04-17', '2025-04-21', '2025-04-22', '2025-04-23',
            '2025-04-24', '2025-04-25', '2025-04-28', '2025-04-29', '2025-04-30', '2025-05-01', '2025-05-02', '2025-05-05',
            '2025-05-06', '2025-05-07', '2025-05-08', '2025-05-09', '2025-05-12', '2025-05-13', '2025-05-14', '2025-05-15',
            '2025-05-16', '2025-05-19', '2025-05-20', '2025-05-21', '2025-05-22', '2025-05-23', '2025-05-27', '2025-05-28',
            '2025-05-29', '2025-05-30', '2025-06-02', '2025-06-03', '2025-06-04', '2025-06-05'
        ]),
        'Close': [
            409.44, 408.9, 408.39, 401.7, 405.72, 414.2, 423.04, 427, 430.59, 431.34, 435.15, 430.81, 438.69, 435.27,
            433.51, 429.17, 432.11, 431.31, 428.02, 430.3, 420.69, 417.13, 416.54, 416.06, 409.54, 414.71, 417.46, 415.84,
            416.32, 419.14, 418.74, 416.12, 416.72, 418.16, 418.78, 427.51, 424.6, 424.73, 428.15, 426.59, 431.95, 432.53,
            406.35, 410.37, 408.46, 411.46, 420.18, 425.43, 422.54, 418.01, 423.03, 425.2, 426.89, 415, 415.76, 417.79,
            415.49, 412.87, 417, 418.79, 427.99, 422.99, 423.46, 430.98, 431.2, 437.42, 442.62, 443.57, 446.02, 443.33,
            448.99, 449.56, 447.27, 451.59, 454.46, 437.39, 437.03, 436.6, 435.25, 439.33, 438.11, 430.53, 424.83, 421.5,
            418.58, 423.35, 427.85, 422.37, 424.56, 418.95, 417.19, 415.67, 426.31, 424.58, 429.03, 428.5, 446.2, 446.71,
            444.06, 434.56, 447.2, 442.33, 414.99, 415.06, 410.92, 412.37, 413.29, 415.82, 409.75, 412.22, 411.44, 409.04,
            410.54, 408.43, 409.64, 414.77, 416.13, 408.21, 404, 397.9, 399.73, 392.53, 396.99, 388.49, 388.61, 401.02,
            396.89, 393.31, 380.16, 380.45, 383.27, 378.77, 388.56, 388.7, 383.52, 387.82, 386.84, 391.26, 393.08, 395.16,
            389.97, 390.58, 378.8, 375.39, 382.19, 382.14, 373.11, 359.84, 357.86, 354.56, 390.49, 381.35, 388.45, 387.81,
            385.73, 371.61, 367.78, 359.12, 366.82, 374.39, 387.3, 391.85, 391.16, 394.04, 395.26, 425.4, 435.28, 436.17,
            433.31, 433.35, 438.17, 438.73, 449.26, 449.14, 452.94, 453.13, 454.27, 458.87, 458.17, 452.57, 454.86, 450.18,
            460.69, 457.36, 458.68, 460.36, 461.97, 462.97, 463.87, 467.68
        ]
    }),
    'Alphabet': pd.DataFrame({
        'Date': pd.to_datetime([
            '2024-09-03', '2024-09-04', '2024-09-05', '2024-09-06', '2024-09-09', '2024-09-10', '2024-09-11', '2024-09-12',
            '2024-09-13', '2024-09-16', '2024-09-17', '2024-09-18', '2024-09-19', '2024-09-20', '2024-09-23', '2024-09-24',
            '2024-09-25', '2024-09-26', '2024-09-27', '2024-09-30', '2024-10-01', '2024-10-02', '2024-10-03', '2024-10-04',
            '2024-10-07', '2024-10-08', '2024-10-09', '2024-10-10', '2024-10-11', '2024-10-14', '2024-10-15', '2024-10-16',
            '2024-10-17', '2024-10-18', '2024-10-21', '2024-10-22', '2024-10-23', '2024-10-24', '2024-10-25', '2024-10-28',
            '2024-10-29', '2024-10-30', '2024-10-31', '2024-11-01', '2024-11-04', '2024-11-05', '2024-11-06', '2024-11-07',
            '2024-11-08', '2024-11-11', '2024-11-12', '2024-11-13', '2024-11-14', '2024-11-15', '2024-11-18', '2024-11-19',
            '2024-11-20', '2024-11-21', '2024-11-22', '2024-11-25', '2024-11-26', '2024-11-27', '2024-11-29', '2024-12-02',
            '2024-12-03', '2024-12-04', '2024-12-05', '2024-12-06', '2024-12-09', '2024-12-10', '2024-12-11', '2024-12-12',
            '2024-12-13', '2024-12-16', '2024-12-17', '2024-12-18', '2024-12-19', '2024-12-20', '2024-12-23', '2024-12-24',
            '2024-12-26', '2024-12-27', '2024-12-30', '2024-12-31', '2025-01-02', '2025-01-03', '2025-01-06', '2025-01-07',
            '2025-01-08', '2025-01-10', '2025-01-13', '2025-01-14', '2025-01-15', '2025-01-16', '2025-01-17', '2025-01-21',
            '2025-01-22', '2025-01-23', '2025-01-24', '2025-01-27', '2025-01-28', '2025-01-29', '2025-01-30', '2025-01-31',
            '2025-02-03', '2025-02-04', '2025-02-05', '2025-02-06', '2025-02-07', '2025-02-10', '2025-02-11', '2025-02-12',
            '2025-02-13', '2025-02-14', '2025-02-18', '2025-02-19', '2025-02-20', '2025-02-21', '2025-02-24', '2025-02-25',
            '2025-02-26', '2025-02-27', '2025-02-28', '2025-03-03', '2025-03-04', '2025-03-05', '2025-03-06', '2025-03-07',
            '2025-03-10', '2025-03-11', '2025-03-12', '2025-03-13', '2025-03-14', '2025-03-17', '2025-03-18', '2025-03-19',
            '2025-03-20', '2025-03-21', '2025-03-24', '2025-03-25', '2025-03-26', '2025-03-27', '2025-03-28', '2025-03-31',
            '2025-04-01', '2025-04-02', '2025-04-03', '2025-04-04', '2025-04-07', '2025-04-08', '2025-04-09', '2025-04-10',
            '2025-04-11', '2025-04-14', '2025-04-15', '2025-04-16', '2025-04-17', '2025-04-21', '2025-04-22', '2025-04-23',
            '2025-04-24', '2025-04-25', '2025-04-28', '2025-04-29', '2025-04-30', '2025-05-01', '2025-05-02', '2025-05-05',
            '2025-05-06', '2025-05-07', '2025-05-08', '2025-05-09', '2025-05-12', '2025-05-13', '2025-05-14', '2025-05-15',
            '2025-05-16', '2025-05-19', '2025-05-20', '2025-05-21', '2025-05-22', '2025-05-23', '2025-05-27', '2025-05-28',
            '2025-05-29', '2025-05-30', '2025-06-02', '2025-06-03', '2025-06-04', '2025-06-05'
        ]),
        'Close': [
            157.36, 156.45, 157.24, 150.92, 148.71, 148.66, 151.16, 154.69, 157.46, 158.06, 159.32, 159.81, 162.14, 163.59,
            161.85, 162.29, 161.49, 162.73, 163.95, 165.85, 166.99, 165.86, 165.86, 167.06, 162.98, 164.38, 161.86, 162.08,
            163.24, 164.96, 165.46, 165.16, 162.93, 163.42, 164.07, 165.14, 162.78, 162.72, 165.27, 166.72, 169.68, 174.46,
            171.11, 171.29, 169.24, 169.74, 176.51, 180.75, 178.35, 180.35, 181.62, 178.88, 175.58, 172.49, 175.3, 178.12,
            175.98, 167.63, 164.76, 167.65, 169.12, 169.23, 168.95, 171.49, 171.34, 174.37, 172.64, 174.71, 175.37, 185.17,
            195.4, 191.96, 189.82, 196.66, 195.42, 188.4, 188.51, 191.41, 194.63, 196.11, 195.6, 192.76, 191.24, 189.3,
            189.43, 191.79, 196.87, 195.49, 193.95, 192.04, 191.01, 189.66, 195.55, 192.91, 196, 198.05, 198.37, 197.98,
            200.21, 191.81, 195.3, 195.41, 200.87, 204.02, 201.23, 206.38, 191.33, 191.6, 185.34, 186.47, 185.32, 183.61,
            186.14, 185.23, 183.77, 185.27, 184.56, 179.66, 179.25, 175.42, 172.73, 168.5, 170.28, 167.01, 170.92, 173.02,
            172.35, 173.86, 165.87, 164.04, 167.11, 162.76, 165.49, 164.29, 160.67, 163.89, 162.8, 163.99, 167.68, 170.56,
            165.06, 162.24, 154.33, 154.64, 157.07, 157.04, 150.72, 145.6, 146.75, 144.7, 158.71, 152.82, 157.14, 159.07,
            156.31, 153.33, 151.16, 147.67, 151.47, 155.35, 159.28, 161.96, 160.61, 160.16, 158.8, 161.3, 164.03, 164.21,
            163.23, 151.38, 154.28, 152.75, 158.46, 159.53, 165.37, 163.96, 166.19, 166.54, 163.98, 168.56, 170.87, 168.47,
            172.9, 172.36, 171.86, 171.74, 169.03, 166.18, 168.05, 168.21
        ]
    })
}

# Check if any files were successfully loaded
if not stock_datasets:
    print("Error: No valid stock data files were loaded.")
    raise ValueError("No valid stock data files loaded")

# Processing and analyzing each stock
for ticker, data in stock_datasets.items():
    print(f'\n\n=== Analysis for {ticker} ===\n')

    # Converting 'Date' column to datetime and setting as index
    data['Date'] = pd.to_datetime(data['Date'])
    data.set_index('Date', inplace=True)
    print(f"Using column 'Date' for {ticker} date index")

    # Extracting the close prices
    stock_data = data['Close']
    print(f"Using column 'Close' for {ticker} close prices")

    # Unit Root Test (Augmented Dickey-Fuller) on original data
    adf_test(stock_data, title=f'{ticker} Original Close Prices')

    # Apply first-order differencing to make the series potentially stationary
    stock_data_diff = stock_data.diff().dropna()
    print(f"Applied first-order differencing for {ticker} to remove trend and stabilize mean")

    # Unit Root Test (Augmented Dickey-Fuller) on differenced data
    adf_test(stock_data_diff, title=f'{ticker} Differenced Close Prices')

    # Plot ACF and PACF for differenced data
    plt.figure(figsize=(14, 7))
    plot_acf(stock_data_diff, lags=30, title=f'ACF for {ticker} Differenced Close Prices')
    plt.show()
    plt.figure(figsize=(14, 7))
    plot_pacf(stock_data_diff, lags=30, title=f'PACF for {ticker} Differenced Close Prices')
    plt.show()

    # Calculating moving averages for original data (9-day and 30-day)
    ma_9 = moving_average(stock_data, 9)
    ma_30 = moving_average(stock_data, 30)

    # Plotting the original close prices and moving averages
    plt.figure(figsize=(14, 7))
    plt.plot(stock_data, label='Original Close Prices', color='blue')
    plt.plot(ma_9, label='9-Day Moving Average', color='orange', linestyle='--')
    plt.plot(ma_30, label='30-Day Moving Average', color='green', linestyle='--')
    plt.title(f'{ticker} - Original Close Prices and Moving Averages')
    plt.xlabel('Date')
    plt.ylabel('Price (USD)')
    plt.legend()
    plt.grid(True)
    plt.show()

    # Plotting the differenced close prices
    plt.figure(figsize=(14, 7))
    plt.plot(stock_data_diff, label='Differenced Close Prices', color='purple')
    plt.title(f'{ticker} - Differenced Close Prices (First Order)')
    plt.xlabel('Date')
    plt.ylabel('Price Change (USD)')
    plt.legend()
    plt.grid(True)
    plt.show()

# Cointegration tests between pairs of stocks
stock_pairs = [('Netflix', 'LLY'), ('Netflix', 'Microsoft'), ('Netflix', 'Alphabet'),
               ('LLY', 'Microsoft'), ('LLY', 'Alphabet'), ('Microsoft', 'Alphabet')]
for ticker1, ticker2 in stock_pairs:
    if ticker1 in stock_datasets and ticker2 in stock_datasets:
        cointegration_test(stock_datasets[ticker1]['Close'], stock_datasets[ticker2]['Close'], ticker1, ticker2)